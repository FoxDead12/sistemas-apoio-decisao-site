q
name
q
row[1..].sum()
q
matrizJuz
line_headers_execl
q
@data_request[:criteria]
@data_request
c
q
Time.now.strftime('%Y-%m-%d %H:%M:%S.%L').gsub!(' ', '_')
Time.now.strftime('%Y-%m-%d %H:%M:%S.%L')
c
n
q
n
workbook
n
workbook
q
matrizJuz
q
matrizJuz
q
matrizJuz
q
matrizJuz
q
sum_weight_props
sum_weight_props[column_i]
column.to_f
column
column_i
c
n
c
matrizJuz
matrizJuz[row_i]
matrizJuz[row_i][column_i]
column.to_f
sum_weight_props[column_i]
q
@data_request[:items]
@data_request
q
sum_weight_props
weight_props
sum_cost
q
sum_weight_props
weight_props
sum_cost
q
sum_weight_props
weight_props
sum_cost
q
sum_weight_props
weight_props
sum_cost
q
sum_weight_props
weight_props
sum_cost
q
column
c
weight_props
sum_cost
c
weight_props
sum_cost
c
sum_cost
weight_props
q
weight_props
c
cc
c
n
column_i
 weight_props
 weight_props[row_i]
q
weight_props[0]
weight_props[0
weight_props
n
weight_props[row_i][column_i] = 2
@data_request[:cost][row_i][column_i].to_f
sum_cost[column_i].to_f
column_i
row_i
c
q
error.backtraceq
error.backtrace
error
n
weight_props
c
q
@data_request[:cost][row_i][column_i].to_f
 weight_props[row_i][column_i] = 2
 weight_props[row_i]
 weight_props[row_i][column_i]
q
weight_props
q
sum_cost
q
sum_cost
exit
q
c
q
sum_cost
q
weight_props
c
q
weight_props
q
weight_props
q
weight_props
c
q
weight_props
q
weight_props
q
weight_props
c
weight_props
q
1 / 3
 column
 sum_cost
 sum_cost[row_i]
q
weight_props
c
q
weight_props
weight_props[0] = 2
weight_props[0][0] = 2
weight_props[column_i][row_i] = 2
weight_props
 weight_props[column_i][row_i]
 weight_props[row_i][column_i]
q
c
row_iu
row
q
row_i
row
@data_request[:cost]
sum_cost
sum
row_i
row
q
sum_cost
c
sum_cost
c
sum_cost
c
q
user_info
q
data
q
data
q
data
q
data
q
data
q
data
q
n
@data_request
n
@data_request
c
q
c
params[:token]
params[:token}
params
exit
qeixt
params
q
params["token"]
params.inspect
params
@params
params
params.values
q
params.values
paramns
q
n
result_user[:id]
result_user[0]
result_user
c
quit
@data_request[:email]
#{@data_request[:email]}
c
result
count
n
count
exit
DB.fetch <<-SQL  INSERT INTO public.users (email, password_hash, name) VALUES ('#{@data_request[:email]}', '#{password_hash}', '#{@data_request[:name]}'); SQL
l
ls
count
DB.fetch <<-SQL
   20:         INSERT INTO public.users (email, password_hash, name) VALUES ('#{@data_request[:email]}', '#{password_hash}', '#{@data_request[:name]}');
   21:       SQL
count
n
count
c
n
params
n
params
n
c
n
result_insert
result_insert[0]
result_insert
n
result_insert
